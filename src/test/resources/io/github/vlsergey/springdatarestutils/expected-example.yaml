openapi: 3.0.1
info:
  title: ToOpenApiActionImplTest Spring Data REST OpenAPI Specification
  description: This is automatically generated OpenAPI Specification for Spring Data
    REST entities and repositories
  version: 0.0.1-SNAPSHOT
servers:
- url: /api
paths:
  /groups:
    get:
      tags:
      - Group
      description: Find entities
      parameters:
      - name: page
        in: query
        description: Results page you want to retrieve (0..N)
        schema:
          minimum: 0
          type: integer
          format: int32
          nullable: false
      - name: size
        in: query
        description: Number of records per page
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          nullable: false
      - name: sort
        in: query
        description: Sorting parameters
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                required:
                - _embedded
                - _links
                - page
                type: object
                properties:
                  _embedded:
                    required:
                    - groups
                    type: object
                    properties:
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupWithLinks'
                  _links:
                    required:
                    - profile
                    - search
                    - self
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/Link'
                      profile:
                        $ref: '#/components/schemas/Link'
                      search:
                        $ref: '#/components/schemas/Link'
                  page:
                    required:
                    - number
                    - size
                    - totalElements
                    - totalPages
                    type: object
                    properties:
                      size:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
                      totalElements:
                        minimum: 0
                        type: integer
                        format: int64
                        nullable: false
                      totalPages:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
                      number:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
    post:
      tags:
      - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroupRequest'
        required: true
      responses:
        "200":
          description: Entity has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupWithLinks'
        "204":
          description: Entity has been created
  /groups/{groupId}:
    get:
      tags:
      - Group
      description: Retrieves an entity by its id
      parameters:
      - $ref: '#/components/parameters/groupId'
      responses:
        "200":
          description: Entity is present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupWithLinks'
        "404":
          description: Entity is missing
    put:
      tags:
      - Group
      parameters:
      - $ref: '#/components/parameters/groupId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      responses:
        "204":
          description: Entity has been updated
    delete:
      tags:
      - Group
      description: Deletes the entity with the given id
      parameters:
      - $ref: '#/components/parameters/groupId'
      responses:
        "204":
          description: Entity has been deleted or already didn't exists
    patch:
      tags:
      - Group
      parameters:
      - $ref: '#/components/parameters/groupId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPatch'
        required: true
      responses:
        "204":
          description: Entity has been updated
  /groups/{groupId}/students:
    get:
      tags:
      - Group
      parameters:
      - $ref: '#/components/parameters/groupId'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                required:
                - _embedded
                - _links
                - page
                type: object
                properties:
                  _embedded:
                    required:
                    - students
                    type: object
                    properties:
                      students:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentWithLinks'
                  _links:
                    required:
                    - self
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/Link'
        "404":
          description: Entity is missing
    put:
      tags:
      - Group
      description: Binds the resource pointed to by the given URI(s) to the association
        resource. Overwrites existing assotiation.
      parameters:
      - $ref: '#/components/parameters/groupId'
      requestBody:
        description: URIs pointing to the resource to bind to the association
        content:
          text/uri-list:
            schema:
              type: string
            example: |-
              /children/42
              /children/43
      responses:
        "204":
          description: ok
        "404":
          description: Entity is missing
    post:
      tags:
      - Group
      description: Binds the resource pointed to by the given URI(s) to the association
        resource. Adds specified resource to association. Returns an error if resource
        is already bind.
      parameters:
      - $ref: '#/components/parameters/groupId'
      requestBody:
        description: URIs pointing to the resource to bind to the association
        content:
          text/uri-list:
            schema:
              type: string
            example: |-
              /children/42
              /children/43
      responses:
        "204":
          description: ok
        "404":
          description: Entity is missing
        "409":
          description: Problems like key duplication or unique constrain violation
  /groups/{groupId}/students/{studentId}:
    delete:
      tags:
      - Group
      description: Unbinds the association
      parameters:
      - $ref: '#/components/parameters/groupId'
      - name: studentId
        in: path
        description: Assotiated entity ID
        required: true
        schema:
          type: string
          nullable: false
      responses:
        "204":
          description: ok
  /students:
    get:
      tags:
      - Student
      description: Find entities
      parameters:
      - name: name
        in: query
        schema:
          type: string
      - name: studentId
        in: query
        schema:
          type: string
          format: uuid
      - name: page
        in: query
        description: Results page you want to retrieve (0..N)
        schema:
          minimum: 0
          type: integer
          format: int32
          nullable: false
      - name: size
        in: query
        description: Number of records per page
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          nullable: false
      - name: sort
        in: query
        description: Sorting parameters
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                required:
                - _embedded
                - _links
                - page
                type: object
                properties:
                  _embedded:
                    required:
                    - students
                    type: object
                    properties:
                      students:
                        type: array
                        items:
                          $ref: '#/components/schemas/StudentWithLinks'
                  _links:
                    required:
                    - profile
                    - search
                    - self
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/Link'
                      profile:
                        $ref: '#/components/schemas/Link'
                      search:
                        $ref: '#/components/schemas/Link'
                  page:
                    required:
                    - number
                    - size
                    - totalElements
                    - totalPages
                    type: object
                    properties:
                      size:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
                      totalElements:
                        minimum: 0
                        type: integer
                        format: int64
                        nullable: false
                      totalPages:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
                      number:
                        minimum: 0
                        type: integer
                        format: int32
                        nullable: false
    post:
      tags:
      - Student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudentRequest'
        required: true
      responses:
        "200":
          description: Entity has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentWithLinks'
        "204":
          description: Entity has been created
  /students/search/countByGroupGroupId:
    get:
      tags:
      - Student
      parameters:
      - name: groupId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: integer
                format: int64
  /students/{studentId}:
    get:
      tags:
      - Student
      description: Retrieves an entity by its id
      parameters:
      - $ref: '#/components/parameters/studentId'
      responses:
        "200":
          description: Entity is present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentWithLinks'
        "404":
          description: Entity is missing
    put:
      tags:
      - Student
      parameters:
      - $ref: '#/components/parameters/studentId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
        required: true
      responses:
        "204":
          description: Entity has been updated
    delete:
      tags:
      - Student
      description: Deletes the entity with the given id
      parameters:
      - $ref: '#/components/parameters/studentId'
      responses:
        "204":
          description: Entity has been deleted or already didn't exists
    patch:
      tags:
      - Student
      parameters:
      - $ref: '#/components/parameters/studentId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentPatch'
        required: true
      responses:
        "204":
          description: Entity has been updated
  /students/{studentId}/group:
    get:
      tags:
      - Student
      parameters:
      - $ref: '#/components/parameters/studentId'
      responses:
        "200":
          description: Entity is present
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        "404":
          description: Entity is missing
components:
  schemas:
    Group:
      required:
      - countOfStudents
      - firstStudentName
      - groupId
      - subjects
      - title
      type: object
      properties:
        countOfStudents:
          minimum: 0
          type: integer
          format: int64
          nullable: false
        firstStudentName:
          type: string
          nullable: true
          x-single-line: true
        groupId:
          type: string
          format: uuid
          nullable: false
        subjects:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: false
          x-single-line: true
    GroupLinks:
      required:
      - _links
      type: object
      properties:
        _links:
          type: object
          properties:
            group:
              $ref: '#/components/schemas/Link'
            self:
              $ref: '#/components/schemas/Link'
    GroupPatch:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        subjects:
          type: array
          items:
            type: string
        title:
          type: string
          x-single-line: true
    GroupRequest:
      required:
      - subjects
      - title
      type: object
      properties:
        groupId:
          type: string
          format: uuid
          nullable: false
        subjects:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: false
          x-single-line: true
    GroupWithLinks:
      allOf:
      - $ref: '#/components/schemas/Group'
      - $ref: '#/components/schemas/GroupLinks'
    Link:
      type: object
      properties:
        deprecation:
          type: string
          nullable: false
        href:
          type: string
          nullable: false
        hreflang:
          type: string
          nullable: false
        media:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
        profile:
          type: string
          nullable: false
        rel:
          type: string
          nullable: false
        templated:
          type: boolean
          nullable: false
        title:
          type: string
          nullable: false
        type:
          type: string
          nullable: false
    NewGroupRequest:
      required:
      - subjects
      - title
      type: object
      properties:
        groupId:
          type: string
          format: uuid
          nullable: false
        subjects:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: false
          x-single-line: true
    NewStudentRequest:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: string
          nullable: false
        name:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
          x-single-line: true
        studentId:
          type: string
          format: uuid
          nullable: false
    Student:
      required:
      - name
      - studentId
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
          x-single-line: true
        studentId:
          type: string
          format: uuid
          nullable: false
    StudentLinks:
      required:
      - _links
      type: object
      properties:
        _links:
          type: object
          properties:
            group:
              $ref: '#/components/schemas/Link'
            self:
              $ref: '#/components/schemas/Link'
            student:
              $ref: '#/components/schemas/Link'
    StudentPatch:
      type: object
      properties:
        group:
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
          x-single-line: true
        studentId:
          type: string
          format: uuid
    StudentRequest:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: string
          nullable: false
        name:
          maxLength: 255
          minLength: 1
          type: string
          nullable: false
          x-single-line: true
        studentId:
          type: string
          format: uuid
          nullable: false
    StudentWithLinks:
      allOf:
      - $ref: '#/components/schemas/Student'
      - $ref: '#/components/schemas/StudentLinks'
  parameters:
    groupId:
      name: groupId
      in: path
      description: Group identifier
      required: true
      schema:
        type: string
        format: uuid
        nullable: false
    studentId:
      name: studentId
      in: path
      description: Student identifier
      required: true
      schema:
        type: string
        format: uuid
        nullable: false
